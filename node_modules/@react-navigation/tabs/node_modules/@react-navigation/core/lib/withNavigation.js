'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.default = withNavigation;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _hoistNonReactStatics = require('hoist-non-react-statics');

var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

var _invariant = require('./invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _NavigationContext = require('./NavigationContext');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function withNavigation(Component) {
  var ComponentWithNavigation = function (_React$Component) {
    _inherits(ComponentWithNavigation, _React$Component);

    function ComponentWithNavigation() {
      _classCallCheck(this, ComponentWithNavigation);

      return _possibleConstructorReturn(this, (ComponentWithNavigation.__proto__ || Object.getPrototypeOf(ComponentWithNavigation)).apply(this, arguments));
    }

    _createClass(ComponentWithNavigation, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var navigationProp = this.props.navigation;
        return _react2.default.createElement(
          _NavigationContext.NavigationConsumer,
          null,
          function (navigationContext) {
            var navigation = navigationProp || navigationContext;
            (0, _invariant2.default)(!!navigation, 'withNavigation can only be used on a view hierarchy of a navigator. The wrapped component is unable to get access to navigation from props or context.');
            return _react2.default.createElement(Component, _extends({}, _this2.props, { navigation: navigation, ref: _this2.props.onRef }));
          }
        );
      }
    }]);

    return ComponentWithNavigation;
  }(_react2.default.Component);

  ComponentWithNavigation.displayName = 'withNavigation(' + (Component.displayName || Component.name) + ')';


  return (0, _hoistNonReactStatics2.default)(ComponentWithNavigation, Component);
}